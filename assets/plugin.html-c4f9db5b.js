import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as l,c as e,e as a}from"./app-76c16816.js";const n={},s=a(`<h1 id="插件开发" tabindex="-1"><a class="header-anchor" href="#插件开发" aria-hidden="true">#</a> 插件开发</h1><h2 id="插件介绍" tabindex="-1"><a class="header-anchor" href="#插件介绍" aria-hidden="true">#</a> 插件介绍</h2><p>HoYoGameLauncher的插件是用于拓展HoYoGameLauncher功能的，插件可以拓展HoYoGameLauncher的UI，也可以拓展HoYoGameLauncher的启动逻辑。</p><h2 id="插件开发-1" tabindex="-1"><a class="header-anchor" href="#插件开发-1" aria-hidden="true">#</a> 插件开发</h2><h3 id="可以调用的库" tabindex="-1"><a class="header-anchor" href="#可以调用的库" aria-hidden="true">#</a> 可以调用的库</h3><p>此为在import后的名字</p><details><summary> 查看 </summary><ul><li>sys</li><li>builtins</li><li>marshal</li><li>nt</li><li>winreg</li><li>time</li><li>zipimport</li><li>codecs</li><li>encodings</li><li>abc</li><li>io</li><li>stat</li><li>genericpath</li><li>ntpath</li><li>os</li><li>site</li><li>math</li><li>operator</li><li>datetime</li><li>types</li><li>enum</li><li>itertools</li><li>keyword</li><li>reprlib</li><li>collections</li><li>functools</li><li>copyreg</li><li>re</li><li>token</li><li>tokenize</li><li>linecache</li><li>traceback</li><li>warnings</li><li>weakref</li><li>string</li><li>threading</li><li>atexit</li><li>logging</li><li>posixpath</li><li>fnmatch</li><li>errno</li><li>zlib</li><li>bz2</li><li>lzma</li><li>shutil</li><li>bisect</li><li>random</li><li>tempfile</li><li>contextlib</li><li>typing</li><li>uuid</li><li>json</li><li>select</li><li>selectors</li><li>socket</li><li>struct</li><li>binascii</li><li>base64</li><li>ssl</li><li>socketserver</li><li>wsgiref</li><li>http</li><li>copy</li><li>email</li><li>urllib</li><li>locale</li><li>calendar</li><li>quopri</li><li>html</li><li>uu</li><li>mimetypes</li><li>signal</li><li>msvcrt</li><li>subprocess</li><li>platform</li><li>cgi</li><li>hashlib</li><li>hmac</li><li>unicodedata</li><li>pickle</li><li>configparser</li><li>ast</li><li>opcode</li><li>dis</li><li>importlib</li><li>inspect</li><li>bottle</li><li>webview</li><li>gettext</li><li>ctypes</li><li>click</li><li>contextvars</li><li>markupsafe</li><li>nturl2path</li><li>colorama</li><li>dataclasses</li><li>pkgutil</li><li>secrets</li><li>werkzeug</li><li>numbers</li><li>decimal</li><li>heapq</li><li>difflib</li><li>pprint</li><li>concurrent</li><li>asyncio</li><li>blinker</li><li>pathlib</li><li>jinja2</li><li>itsdangerous</li><li>flask</li><li>Crypto</li><li>cffi</li><li>pycparser</li><li>lib（内置杂项函数）</li><li>queue</li><li>ipaddress</li><li>urllib3</li><li>idna</li><li>zipfile</li><li>certifi</li><li>stringprep</li><li>requests</li><li>api（内置API请求包）</li><li>multiprocessing</li><li>sysconfig</li><li>glob</li><li>loguru</li><li>plugins（插件）</li><li>env（内置通用变量）</li><li>views（内置服务端的视图函数）</li><li>server（内置服务端）</li><li>main（内置主程序）</li></ul></details><h3 id="不可使用的函数名" tabindex="-1"><a class="header-anchor" href="#不可使用的函数名" aria-hidden="true">#</a> 不可使用的函数名</h3><ul><li>route_files</li></ul><h3 id="文件结构" tabindex="-1"><a class="header-anchor" href="#文件结构" aria-hidden="true">#</a> 文件结构</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>plugins/&lt;插件名&gt;/─┐
                  ├── __init__.py
                  ├─┐static
                  │ ├── css
                  │ ├── images
                  │ └── js
                  └─┬ templates
                    └── index.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="init-py" tabindex="-1"><a class="header-anchor" href="#init-py" aria-hidden="true">#</a> <code>__init__.py</code></h4><p>主文件，必须包含有一个类，其需要继承<code>lib.plugin.Plugin</code>这个类。<br><br><br> 其只能调用<a href="#%E5%8F%AF%E4%BB%A5%E8%B0%83%E7%94%A8%E7%9A%84%E5%BA%93">该表</a>内的函数，当然，您也可以将库放在<code>plugins/&lt;插件名&gt;</code>内，您就可以调用了。（需在import 时加点，如：有一个名为<code>c</code>的库,你可以这样导入：<code>import .c</code>）<br> route函数命名规则：</p><ol><li>必须以route开头</li><li>其以<code>_</code>代替url里的<code>/</code></li><li>不得使用<a href="#%E5%8F%AF%E4%BB%A5%E8%B0%83%E7%94%A8%E7%9A%84%E5%BA%93">此表</a>内的函数名<br> 如route_test_1,就可以在<code>&lt;插件名&gt;/test/1/</code>处访问到其返回值</li></ol><br><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果可以，我们建议您将整个插件中的代码都编译为pyc字节码文件，这样可以避免一些在经过pyinstaller打包过后所出现的bug。</p></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> lib<span class="token punctuation">.</span>plugin <span class="token keyword">import</span> Plugin
<span class="token keyword">class</span> <span class="token class-name">Plugin</span><span class="token punctuation">(</span>Plugin<span class="token punctuation">)</span><span class="token punctuation">:</span>
    __name__ <span class="token operator">=</span> <span class="token string">&quot;插件名&quot;</span>
    __version__ <span class="token operator">=</span> <span class="token string">&quot;插件版本&quot;</span>
    __description__ <span class="token operator">=</span> <span class="token string">&quot;插件描述&quot;</span>
    __author__ <span class="token operator">=</span> <span class="token string">&quot;插件作者&quot;</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> route_<span class="token operator">&lt;</span>路径<span class="token operator">&gt;</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&lt;返回值&gt;&quot;</span>
    <span class="token keyword">def</span> <span class="token function">before_reques</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 用于验证请求，True为通过，False为不通过。</span>
        <span class="token keyword">return</span> <span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="static文件夹" tabindex="-1"><a class="header-anchor" href="#static文件夹" aria-hidden="true">#</a> <code>static</code>文件夹</h4><p>静态文件夹，其下的文件可以在<code>/&lt;插件名&gt;/files/&lt;文件路径&gt;</code>访问得到。（文件路径相对于<code>plugins/&lt;插件名&gt;/static</code>）</p><h4 id="templates文件夹" tabindex="-1"><a class="header-anchor" href="#templates文件夹" aria-hidden="true">#</a> <code>templates</code>文件夹</h4><p>模板文件夹，其下的文件会被加载进主页面中，其命名规则<a href="#%E6%A8%A1%E6%9D%BF%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99">见此</a></p><h3 id="模板命名规则" tabindex="-1"><a class="header-anchor" href="#模板命名规则" aria-hidden="true">#</a> 模板命名规则</h3><ul><li>header.html<br> 其会被加载进header中（<code>head</code>）。</li><li>sidebar.html<br> 其会被加载进主页面的sidebar中（<code>.nav</code>）。</li><li>content.html<br> 其会被加载进主页面的内容区域中（<code>.container-fluid</code>）。</li><li>modal.html<br> 其会被加载进模态框中。</li><li>settings.html<br> 其会被加载进设置页面的内容区域中（<code>.container</code>）。</li></ul>`,23),t=[s];function o(c,r){return l(),e("div",null,t)}const u=i(n,[["render",o],["__file","plugin.html.vue"]]);export{u as default};
